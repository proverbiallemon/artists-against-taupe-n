schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Contact {
  createdAt: AWSDateTime!
  email: String!
  id: String!
  message: String!
  name: String!
}

type ContactConnection {
  items: [Contact]
  nextToken: String
}

type Mutation {
  createContact(input: CreateContactInput!): Contact
  deleteContact(input: DeleteContactInput!): Contact
  updateContact(input: UpdateContactInput!): Contact
}

type Query {
  getContact(id: String!): Contact
  listContacts(filter: TableContactFilterInput, limit: Int, nextToken: String): ContactConnection
}

type Subscription {
  onCreateContact(createdAt: AWSDateTime, email: String, id: String, name: String): Contact @aws_subscribe(mutations : ["createContact"])
  onDeleteContact(createdAt: AWSDateTime, email: String, id: String, name: String): Contact @aws_subscribe(mutations : ["deleteContact"])
  onUpdateContact(createdAt: AWSDateTime, email: String, id: String, name: String): Contact @aws_subscribe(mutations : ["updateContact"])
}

input CreateContactInput {
  createdAt: AWSDateTime!
  email: String!
  id: String!
  message: String!
  name: String!
}

input DeleteContactInput {
  id: String!
}

input ModelSizeInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input TableBooleanFilterInput {
  attributeExists: Boolean
  eq: Boolean
  ne: Boolean
}

input TableContactFilterInput {
  createdAt: TableStringFilterInput
  email: TableStringFilterInput
  id: TableStringFilterInput
  name: TableStringFilterInput
}

input TableFloatFilterInput {
  attributeExists: Boolean
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input TableIDFilterInput {
  attributeExists: Boolean
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input TableIntFilterInput {
  attributeExists: Boolean
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input TableStringFilterInput {
  attributeExists: Boolean
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input UpdateContactInput {
  createdAt: AWSDateTime
  email: String
  id: String!
  name: String
}
